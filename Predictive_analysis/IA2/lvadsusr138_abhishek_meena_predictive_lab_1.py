# -*- coding: utf-8 -*-
"""LVADSUSR138_Abhishek_Meena_Predictive_Lab-1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-2yWdqmw1UZHcHoB00Fe2AmjprSymvKR
"""

import seaborn as sns
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.impute import SimpleImputer
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, precision_score, recall_score, classification_report

df = pd.read_csv('/content/winequality-red.csv')

df.describe()

df.shape

df.info()

#question 1(A)
df.isnull().sum()

df = df.fillna(method='ffill', axis='columns')

#question 1 (B)
X = df.drop(columns=['quality'])
y = df['quality']
y = df['quality'].apply(lambda x: 1 if 7 <= x <= 8 else 0)

#question 1 (C)
plt.figure(figsize=(18, 11))
for i, column in enumerate(X.columns):
    plt.subplot(3, 4, i + 1)
    sns.boxplot(x=df['quality'], y=X[column])
    plt.title(column)
plt.tight_layout()
plt.show()

#question 1 (D)
df.duplicated().count()
df.drop_duplicates()

#question 1 (E)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=7)

imputer = SimpleImputer(strategy="median")
X_train = imputer.fit_transform(X_train)
X_test = imputer.transform(X_test)

#question 1 (F)
clf = RandomForestClassifier(n_estimators=100, random_state=7)
clf.fit(X_train, y_train)

y_pred = clf.predict(X_test)

#question 1 (G)
acc = accuracy_score(y_test, y_pred)
prec = precision_score(y_test, y_pred, average='weighted', zero_division=1)
re = recall_score(y_test, y_pred, average='weighted', zero_division=1)

print("Accuracy of the model is:", acc)
print("Precision of the model is:", prec)
print("Recall of the model is:", re)

print(classification_report(y_test, y_pred, zero_division=1))